{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/Heroimages/Heroimage.styles.js","components/Heroimages/index.js","components/Grid/Grid.styleds.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spiner/index.js","components/Spiner/Spiner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.style.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","Warpper","image","Text","HeroImage","title","text","propsType","PropTypes","string","Grid","header","children","propTeypes","PropTeypes","Image","Thumb","movieId","clickable","Spiner","SearchBar","setSearchTeam","useState","state","setState","inital","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","propTyes","func","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","setSearchTerm","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","console","log","setItem","useMovieFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","textDecoration","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","object","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieDFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8761dce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n    </Content>\n  </Wrapper>\n);\n\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\n\nexport const Warpper = styled.div`\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 41%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 50px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//styled\nimport { Warpper, Content, Text } from \"./Heroimage.styles\";\n\nconst HeroImage = ({ image, title, text }) => (\n  <Warpper image={image}>\n    <Content>\n      <Text>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </Text>\n    </Content>\n  </Warpper>\n);\n\nHeroImage.propsType = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default HeroImage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    padding: 0 50px;\n\n    h1{\n        color: var(--medGrey);\n    }\n    h1{\n        @media screen and (maxWidth: 768px){\n            font-size: var(--fontBig);\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n`;","import React from \"react\";\nimport PropTeypes from 'prop-types';\n//Styles\nimport { Wrapper, Content } from \"./Grid.styleds\";\n\nconst Grid = ({ header, children }) => (\n  <Wrapper>\n    <h1>{header}</h1>\n    <Content>{children}</Content>\n  </Wrapper>\n);\n\nGrid.propTeypes = {\n  header: PropTeypes.string\n}\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n    width: 100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n\n    :hover{\n        opacity: 0.8;\n    }\n\n    @keyframes animateThumb{\n        from{\n            opacity: 0;\n        }to{\n            opacity: 1;\n        }\n    }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { Image } from \"./Thumb.styles\";\n\nconst Thumb = ({ image, movieId, clickable }) => (\n  <div>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <Image src={image} alt=\"movie-thumb\" />\n      </Link>\n    ) : (\n      <Image src={image} alt=\"movie-thumb\" />\n    )}\n  </div>\n);\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n};\n\nexport default Thumb;\n","import { Spiner } from './Spiner.styles';\n\nexport default Spiner;","import styled from \"styled-components\";\n\nexport const Spiner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50%50px;\n  animation: spin 0.58s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(300deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Warpper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: var(--fontBig);\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n//Image\nimport searchIcon from \"../../images/search-icon.svg\";\n\n//styles\nimport { Warpper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTeam }) => {\n  const [state, setState] = useState(\"\");\n  const inital = useRef(true);\n\n  useEffect(() => {\n    if (inital.current) {\n      inital.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTeam(state);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTeam, state]);\n\n  return (\n    <Warpper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={(event) => setState(event.currentTarget.value)}\n          value={state}\n        />\n      </Content>\n    </Warpper>\n  );\n};\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    transition: all 0.3s;\n    outline: none;\n    cursor: pointer;\n\n    :hover{\n        opacity: 0.8;\n    }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//Styles\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type=\"button\" onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nButton.propTyes = {\n  text: PropTypes.string,\n  callback: PropTypes.func,\n};\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect, useRef } from \"react\";\n//API\nimport API from \"../API\";\n//session\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useMovieFetch = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  //Initial and search\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState(\"homeState\");   \n      if (sessionState) {\n        console.log('session')\n        setState(sessionState);\n        return;\n      }\n    }\n    console.log('API')\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  //load more\n  useEffect(() => {\n    if (!isLoadingMore) return;\n\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state.page]);\n\n  //Write to sessionStore\n  useEffect(() => {\n    if (!searchTerm) {\n      sessionStorage.setItem(\"homeState\", JSON.stringify(state));\n    }\n  }, [searchTerm, state]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n\n//Config\nimport {\n  POPULAR_BASE_URL,\n  BACKDROP_SIZE,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n} from \"../config\";\n//Components\nimport HeroImage from \"./Heroimages\";\nimport Grid from \"./Grid\";\nimport Thumb from \"./Thumb\";\nimport Spiner from \"./Spiner\";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n\n//Hook\nimport { useMovieFetch } from \"../hooks/useHomeFetch\";\n\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } =\n    useMovieFetch();\n\n  // console.log(state);\n\n  if(error) return <div>Someting went wrong ...</div>\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTeam={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Result\" : \"Popolar Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spiner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%auto;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n\n    span{\n        font-size: var(--fontMed);\n        color: var(--white);\n        padding-right: 10px;\n        \n\n        @media screen and (max-width: 768px){\n            font-size: var(--fontSmall)\n        }\n    }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n//styles\nimport { Wrapper, Content } from \"./BreadCrumb.style\";\n\nconst BreadCrumb = ({movieTitle}) => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\" style={{ textDecoration: 'none' }}>\n          <span>Home</span>\n      </Link>\n        <span>|</span>\n        <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n  movieTitle: PropTypes.string\n}\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Warpper = styled.div`\n  background: ${({backdrop}) =>\n    backdrop ? `URL(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animateMovieInfo{\n      from{\n            opacity: 0;\n      }\n      to{\n        opacity: 1;\n      }\n  }\n\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWith);\n    margin: 0 auto;\n    background: rgba(0,0,0,0.7);\n    border-radius: 20px;\n\n    @media screen and (max-width: 768px){\n        display: block;\n        max-height: none;\n    }\n\n`;\n\nexport const Text = styled.div`\n    width: 100%;\n    padding: 20px 40px;\n    color: var(--white);\n    overflow: hidden;\n\n    .rating-directors{\n        display: flex;\n        justify-content: flex-start;\n    }\n    .score{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        color: black;\n        font-weight: 800;\n        border-radius: 50%;\n        margin: 0;\n    }\n    .director{\n        margin: 0 0 0 40px;\n\n        p{\n            margin: 0%;\n        }\n    }\n\n    h1{\n        @media screen and (max-width: 768px){\n            font-size: var(--fontBig);\n        }\n    }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Components\nimport Thumb from \"../Thumb\";\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n//Image\nimport NoImage from \"../../images/no_image.jpg\";\n//styles\nimport { Warpper, Content, Text } from \"./MovieInfo.styles\";\n\nconst MovieInfo = ({ movie }) => (\n  <Warpper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n        alt=\"movie-thumb\"\n      />\n      <Text>\n          <h1>{movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{movie.overview}</p>\n\n          <div className=\"rating-directors\">\n              <div>\n                  <h3>RATING</h3>\n                  <div className=\"score\">{movie.vote_average}</div>\n              </div>\n              <div className=\"director\">\n                    <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                    {movie.directors.map(director => (\n                        <p key={director.credit_id}>{director.name}</p>\n                    ))}\n              </div>\n          </div>\n      </Text>\n    </Content>\n  </Warpper>\n);\n\nMovieInfo.propsType = {\n  movie: PropTypes.object,\n};\n\n\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n\n    .column{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        border-radius: 20px;\n        margin: 0 20px;\n        flex: 1;\n\n        :first-child{\n            margin-left: 0;\n        }\n\n        :last-child{\n            margin-right: 0;\n        }\n    }\n\n    @media screen and (max-width: 768px){\n        display: block;\n\n        .column{\n          margin: 20px 0;  \n        }\n    }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//helper\nimport { calcTime, convertMoney } from \"../../helpers\";\n//styleds\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className=\"column\">\n        <p>Running time: {calcTime(time)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Revenue: {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n}\n\nexport default MovieInfoBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//styled\nimport { Wrapper, Image } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt=\"actor-thumb\" />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n};\n\nexport default Actor;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n//components\nimport Grid from \"./Grid\";\nimport Spiner from \"./Spiner\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n//Hook\nimport { useMovieDFetch } from \"../hooks/useMovieFetch\";\n//Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Movie = () => {\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieDFetch(movieId);\n\n  if (loading) return <Spiner />;\n  if (error) return <div>Somting went wrong ....</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header='Actors'>\n        {movie.actors.map(actor => (\n          <Actor \n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n              : NoImage\n            }\n          />\n        ))}\n        \n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API from \"../API\";\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieDFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        //get directors only\n        const directors = credits.crew.filter(\n          (member) => member.job === \"Director\"\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors,\n        });\n\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    const sessionState = isPersistedState(movieId);\n\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  //write to sessionStore\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return { state, loading, error };\n};\n","import React from 'react'\n\nconst NotFound = () => <div>NotFound</div>\n\nexport default NotFound;","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n     :root{\n         --maxWith: 1280px;\n         --white: #fff;\n         --lightGrey: #eee;\n         --medGrey: #353535;\n         --darkGrey: #1c1c1c;\n         --fontSuperBig: 2.5rem;\n         --fontBig: 1.5rem;\n         --fontMed: 1.2rem;\n         --fontSmail: 2rem;\n     }\n\n     *{\n         box-sizing: border-box;\n         font-family: 'Abel', sans-serif;\n\n     }\n\n     body{\n         margin: 0;\n         padding: 0;\n\n         h1{\n             font-size: 2rem;\n             font-weight: 600;\n             color:  var(--white);\n         }\n\n         h3{\n             font-size:1.1rem;\n             font-weight: 600;\n         }\n\n         p{\n            font-size: 1rem;\n            color: var(--white);\n         }\n         \n     }\n\n `;\n","import React from \"react\";\n// routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n//style\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path='/' element={<Home />} />\n      <Route path='/:movieId' element={<Movie />} />\n      <Route path='/*' element={<NotFound />} />\n    </Routes>    \n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}